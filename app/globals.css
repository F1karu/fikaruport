@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ec2c2c;
  --foreground: #ff2e2e;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* globals.css */
.bg-video-home {
  background: url('/video/DarkPolygon.mp4') no-repeat center center;
  background-size: cover;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}


body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

.navbar-link {
  position: relative;
  padding-bottom: 5px; /* Memberikan ruang untuk garis */
  transition: all 0.3s ease;
  color: inherit; /* Warna teks tetap sesuai root */
}

.navbar-link:hover {
  color: #e2e8f0; /* Warna teks saat hover */
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.7), 0 0 15px rgba(255, 255, 255, 0.5); /* Efek glow pada teks */
}

.navbar-link::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #ffffff; /* Warna garis bawah */
  transform: scaleX(0); /* Garis dimulai dengan skalanya 0 */
  transition: transform 0.3s ease; /* Animasi munculnya garis */
}

.navbar-link:hover::after {
  transform: scaleX(1); /* Garis muncul pada hover */
}

/* Tambahkan ini ke file CSS */


.typed-cursor {
  font-weight: bold;
  color: #ffffff;
  animation: blink 0.7s steps(2, start) infinite;
}

@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

*,
*:after,
*:before {
	box-sizing: border-box;
}
:root {
	--transition: 0.25s;
	--spark: 1.8s;
}



button {
	--cut: 0.1em;
	--active: 0;
	--bg:
		radial-gradient(
			40% 50% at center 100%,
			hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
			transparent
		),
		radial-gradient(
			80% 100% at center 120%,
			hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
			transparent
		),
		hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
	background: var(--bg);
	font-size: 2rem;
	font-weight: 500;
	border: 0;
	cursor: pointer;
	padding: 0.5em 1em;
	display: flex;
	align-items: center;
	gap: 0.25em;
	white-space: nowrap;
	border-radius: 100px;
	position: relative;
	box-shadow:
		0 0 calc(var(--active) * 2em) calc(var(--active) * 0.25em) hsl(260 97% 61% / 0.75),
		0 -0.05em 0 0 hsl(260 calc(var(--active) * 0%) calc(var(--active) * 60%)) inset;
	transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
	
}

button:active {
  scale: 1;
}

svg {
	overflow: visible !important;
}

.sparkle path {
	color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
	transform-box: fill-box;
	transform-origin: center;
	fill: currentColor;
	stroke: currentColor;
	animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
	animation-duration: 0.6s;
	transition: color var(--transition);
}

button:is(:hover, :focus-visible) path {
	animation-name: bounce;
}

@keyframes bounce {
	35%, 65% {
		scale: var(--scale);
	}
}
.sparkle path:nth-of-type(1) {
	--scale: 0.5;
	--delay: 0.1;
	--base: 40%;
}

.sparkle path:nth-of-type(2) {
	--scale: 1.5;
	--delay: 0.2;
	--base: 20%;
}

.sparkle path:nth-of-type(3) {
	--scale: 2.5;
	--delay: 0.35;
	--base: 30%;
}

button:before {
	content: "";
	position: absolute;
	inset: -0.25em;
	z-index: -1;
	border: 0.25em solid hsl(260 97% 50% / 0.5);
	border-radius: 100px;
	opacity: var(--active, 0);
	transition: opacity var(--transition);
}

.spark {
	position: absolute;
	inset: 0;
	border-radius: 100px;
	rotate: 0deg;
	overflow: hidden;
	mask: linear-gradient(white, transparent 50%);
	animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
	to {
		rotate: 360deg;
	}
}

.spark:before {
	content: "";
	position: absolute;
	width: 200%;
	aspect-ratio: 1;
	top: 0%;
	left: 50%;
	z-index: -1;
	translate: -50% -15%;
	rotate: 0;
	transform: rotate(-90deg);
	opacity: calc((var(--active)) + 0.4);
	background: conic-gradient(
		from 0deg,
		transparent 0 340deg,
		white 360deg
	);
	transition: opacity var(--transition);
	animation: rotate var(--spark) linear infinite both;
}

.spark:after {
	content: "";
	position: absolute;
	inset: var(--cut);
	border-radius: 100px;
}

.backdrop {
	position: absolute;
	inset: var(--cut);
	background: var(--bg);
	border-radius: 100px;
	transition: background var(--transition);
}

@keyframes rotate {
	to {
		transform: rotate(90deg);
	}
}



@supports(selector(:has(:is(+ *)))) {
	body:has(button:is(:hover, :focus-visible)) {
		--active: 1;
		--play-state: running;
	}
	.bodydrop {
		display: none;
	}
}

button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
	--active: 1;
	--play-state: runnin;
}

button:is(:hover, :focus-visible) {
	--active: 1;
	--play-state: running;
}


.sparkle-button {
	position: relative;
}

.particle-pen {
	position: absolute;
	width: 200%;
	aspect-ratio: 1;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
	-webkit-mask: radial-gradient(white, transparent 65%);
	z-index: -1;
	opacity: var(--active, 0);
	transition: opacity var(--transition);
}

.particle {
	fill: white;
	width: calc(var(--size, 0.25) * 1rem);
	aspect-ratio: 1;
	position: absolute;
	top: calc(var(--y) * 1%);
	left: calc(var(--x) * 1%);
	opacity: var(--alpha, 1);
	animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
	transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
	z-index: -1;
	animation-play-state: var(--play-state, paused);
}

.particle path {
	fill: hsl(0 0% 90%);
	stroke: none;
}

.particle:nth-of-type(even) {
	animation-direction: reverse;
}

@keyframes float-out {
	to {
		rotate: 360deg;
	}
}

.text {
	translate: 2% -6%;
	letter-spacing: 0.01ch;
	background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
	-webkit-background-clip: text;
	color: transparent;
	transition: background var(--transition);
}

button svg {
	inline-size: 1.25em;
	translate: -25% -5%;
}

.ease-in-transition {
	transition: all 0.5s ease-in;
  }

  .z-100 {
    z-index: 10;
}

.box {
    position: relative;
    width: 250px;
    height: 250px;
}

.dropdown {
    position: relative;
    width: 180px; /* Increased width */
    height: 50px; /* Increased height */
    background: #0a0a0a;
    color: #fff;
    font-size: 16px; /* Increased font size */
    display: flex;
    justify-content: center; /* Center the text and icons */
    align-items: center; /* Center vertically */
    border-radius: 5px;
    cursor: pointer;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    border: 2px solid #fff; /* White border around the filter box */
    gap: 5px; 
}

.dropdown .left-icon,
.dropdown .right-icon {
    position: relative;
    top: 1px;
    display: inline-block;
    width: 10px; /* Slightly bigger icon size */
    height: 3px;
    background: #fff;
    border-radius: 40px;
    transition: .5s;
}

.dropdown .left-icon {
    transform: rotate(45deg);
}

.dropdown.active .left-icon {
    transform: rotate(135deg);
}

.dropdown .right-icon {
    transform: rotate(-45deg);
}

.dropdown.active .right-icon {
    transform: rotate(-135deg);
}


.dropdown .items {
    position: absolute;
    top: 0;
    left: 0;
    width: 180px; /* Match width with the dropdown */
    height: auto;
    margin-top: 55px; /* Increased margin for better spacing */
    overflow: hidden;
    visibility: hidden;
    transition: .5s;
}

.dropdown.active .items {
    visibility: visible;
}

.dropdown .items a {
    position: relative;
    left: 100%;
    display: flex;
    font-size: 14px;
    background: #fff;
    color: #0a0a0a;
    text-decoration: none;
    border-radius: 5px;
    padding: 8px 10px;
    margin-top: 2px;
    z-index: 1;
    overflow: hidden;
    transition: .5s;
    transition-delay: calc(60ms * var(--i));
}

.dropdown.active .items a {
    left: 0;
}

.dropdown .items a:hover {
    color: #fff;
}

.dropdown .items a span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #0a0a0a;
    z-index: -1;
    border-radius: inherit;
    transform: rotate(160deg);
    transform-origin: right;
    transition: .5s;
}

.dropdown .items a:hover span {
    transform: rotate(0deg);
}




  